% Create PlutoSDR object
clear

plutoReceive = sdrrx('Pluto','RadioID','usb:0'); 

plutoTransmit = sdrtx('Pluto','RadioID','usb:0'); 

% plutoradio = sdrdev('Pluto');
% plutoradio.RadioID = 'ip:192.168.2.1';


fc = 2441e6; % bluetooth 
fs = 6.144e+07; 
fs = 1e5;

% fc = 98e6; % FM radio (requires small firmware adjustment) 
% fs = 20e6; 

% Channel 6 center freq

plutoReceive.CenterFrequency = fc;
plutoReceive.BasebandSampleRate = fs;
plutoReceive.GainSource = 'Manual';
plutoReceive.Gain = 40;


plutoTransmit.CenterFrequency = fc; 
plutoTransmit.BasebandSampleRate = fs;


% Setup spectrogram parameters
fftSize = 2^17;
window = blackman(fftSize);
numRows = 100;
specData = zeros(numRows, fftSize);

% Setup frequency axis
freq = (-fftSize/2:fftSize/2-1)*(fs/fftSize) + fc;

% Setup plot
figure(1)
% colorbar;
% ylabel('Time');
% title('WiFi Spectrum');
% clim([-120 0]);
% grid on;
time = (1:numRows)*fftSize/fs;

% Capture and display data continuously
% try
tic

for i = 1:numRows
    % Capture samples
    f = 0
   wf = exp(2i*pi*rand(fftSize,1));
   plutoTransmit(wf)

    dataInt = plutoReceive.capture(fftSize);
   
   
   % Compute FFT
   data = single(dataInt);
   spectrum = fftshift(fft(data .* window));
   powerDb = 10*log10(abs(spectrum).^2);

   specData = [specData(2:end,:);powerDb'];

   subplot(2,1,1)
   imagesc(freq,time,specData)
   xlabel('Frequency (Hz)');

   subplot(2,1,2)
   plot(freq,powerDb)
   xlabel('Frequency (Hz)');

   % pause(.001)
   drawnow

end
toc
% 23 secs 
% 33 secs 

% catch ME
%    % Clean up on error or Ctrl-C
%    release(plutoradio);
%    rethrow(ME);
% end

% Clean up
release(plutoReceive)
release(plutoTransmit)